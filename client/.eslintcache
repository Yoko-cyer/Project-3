[{"C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\index.js":"1","C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\App.js":"2","C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\utils\\queries.js":"3","C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\utils\\mutations.js":"4","C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\utils\\auth.js":"5","C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\pages\\Login.jsx":"6","C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\pages\\Signup.jsx":"7","C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\components\\layout\\AuthLayout.jsx":"8"},{"size":220,"mtime":1665461803706,"results":"9","hashOfConfig":"10"},{"size":1890,"mtime":1666070350121,"results":"11","hashOfConfig":"10"},{"size":424,"mtime":1664587245313,"results":"12","hashOfConfig":"10"},{"size":841,"mtime":1664587245301,"results":"13","hashOfConfig":"10"},{"size":720,"mtime":1664587245286,"results":"14","hashOfConfig":"10"},{"size":2500,"mtime":1664587245206,"results":"15","hashOfConfig":"10"},{"size":4628,"mtime":1666071024021,"results":"16","hashOfConfig":"10"},{"size":571,"mtime":1666070166367,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"t63t2q",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":1,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\index.js",[],["38","39"],"C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\App.js",["40"],"import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { blue } from \"@mui/material/colors\"\n\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport AuthLayout from './components/layout/AuthLayout';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n\n  const theme = createTheme({\n    palette: { primary: blue }\n  });\n\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n\n  const theme = createTheme({\n    palette: { primary: blue }\n  });\n\n  return (\n    <ApolloProvider client={client}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline/>\n        <Router>\n          <Routes>\n            <Route path=\"/\" element={<AuthLayout />}>\n              <Route path=\"login\" element={<Login />} />\n              <Route path=\"signup\" element={<Signup />} />\n            </Route>\n          </Routes>\n          {/* <Routes>\n            <Route path=\"/\" element={<AppLayout />}>\n              <Route index element={<Home />} />\n              <Route path=\"memo\" element={<Home />} />\n            </Route>\n          </Routes> */}\n        </Router>\n      </ThemeProvider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\utils\\queries.js",[],["41","42"],"C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\utils\\auth.js",[],"C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\pages\\Login.jsx",[],"C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\pages\\Signup.jsx",["43","44","45","46","47","48","49","50","51"],"import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Box, TextField, Button } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_PROFILE } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\n\nconst Signup = () => {\n\n  const navigate = useNavigate();\n  const [usernameErrText, setUsernameErrText] = useState(\"\");\n  const [passwordErrText, setPasswordErrText] = useState(\"\");\n  const [confirmErrText, setConfirmErrText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  \n  \n  const [formState, setFormState] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n  // const [addProfile, { error, data }] = useMutation(ADD_PROFILE);\n\n  // update state based on form input changes\n  // const handleChange = (event) => {\n  //   const { name, value } = event.target;\n\n  //   setFormState({\n  //     ...formState,\n  //     [name]: value,\n  //   });\n  // };\n\n  // submit form\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addProfile({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addProfile.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <>\n    <Box component=\"form\" onSubmit={handleSubmit} noValidate>\n      <TextField \n        fullWidth \n        id=\"username\" \n        label=\"user name\" \n        margin=\"normal\"\n        name=\"username\"\n        required\n        helperText={usernameErrText}\n        error={usernameErrText !== \"\"}\n        disabled={loading}\n      />\n      <TextField \n        fullWidth \n        id=\"password\" \n        label=\"password\" \n        margin=\"normal\"\n        name=\"password\"\n        type=\"password\"\n        required\n        helperText={passwordErrText}\n        error={passwordErrText !== \"\"}\n        disabled={loading}\n      />\n      <TextField \n        fullWidth \n        id=\"confirmPassword\" \n        label=\"confirm password\" \n        margin=\"normal\"\n        name=\"confirmPassword\"\n        type=\"password\"\n        required\n        helperText={confirmErrText}\n        error={confirmErrText !== \"\"}\n        disabled={loading}\n      />\n      <LoadingButton \n        sx={{ mt: 3, mb: 2}} \n        fullWidth \n        type=\"submit\"\n        loading={loading}\n        color=\"primary\"\n        variant=\"outlined\"\n      >\n        Create Account\n      </LoadingButton>    \n    </Box>\n      <Button component={Link} to=\"/login\">\n        Do you already have an account? Log in\n      </Button>\n    </>\n  );\n};\n\nexport default Signup;\n\n\n\n// const Register = () => {\n\n \n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setUsernameErrText(\"\");\n//     setPasswordErrText(\"\");\n//     setConfirmErrText(\"\");\n\n//     // get data from the front-end\n//     const data = new FormData(e.target);\n//     const username = data.get(\"username\").trim();\n//     const password = data.get(\"password\").trim();\n//     const confirmPassword = data.get(\"confirmPassword\").trim();\n//     console.log(username);\n//     console.log(password);\n//     console.log(confirmPassword);\n\n//     let error = false;\n\n//     if (username === \"\") {\n//       error = true;\n//       setUsernameErrText(\"Enter your username.\");\n//     }\n//     if (password === \"\") {\n//       error = true;\n//       setPasswordErrText(\"Enter your password.\");\n//     }\n//     if (confirmPassword === \"\") {\n//       error = true;\n//       setConfirmErrText(\"Enter your confirmed password.\");\n//     }\n//     if (password !== confirmPassword) {\n//       error = true;\n//       setConfirmErrText(\"Password and confirmed password don't match.\");\n//     }\n    \n//     if (error) return;\n\n//     setLoading(true);\n\n//     // register api\n//     try {\n//       const res = await authApi.register({\n//         username,\n//         password,\n//         confirmPassword\n//       });\n//       setLoading(false);\n//       localStorage.setItem(\"token\", res.token);\n//       console.log(\"register successful\");\n//       navigate(\"/\");\n//     } catch (err) {\n//       const errors = err.data.errors;\n//       console.log(errors);\n//       errors.forEach((err) => {\n//         if (err.param === \"username\") {\n//           setUsernameErrText(err.msg);\n//         }\n//         if (err.param === \"password\") {\n//           setPasswordErrText(err.msg);\n//         }\n//         if (err.param === \"confirmPassword\") {\n//           setConfirmErrText(err.msg);\n//         }\n//       });\n//       setLoading(false);\n//     }\n//   };\n \n// };\n\n// export default Register","C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\components\\layout\\AuthLayout.jsx",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":27,"column":9,"nodeType":"58","messageId":"59","endLine":27,"endColumn":14},{"ruleId":"52","replacedBy":"60"},{"ruleId":"54","replacedBy":"61"},{"ruleId":"56","severity":1,"message":"62","line":6,"column":10,"nodeType":"58","messageId":"59","endLine":6,"endColumn":21},{"ruleId":"56","severity":1,"message":"63","line":7,"column":10,"nodeType":"58","messageId":"59","endLine":7,"endColumn":21},{"ruleId":"56","severity":1,"message":"64","line":14,"column":9,"nodeType":"58","messageId":"59","endLine":14,"endColumn":17},{"ruleId":"56","severity":1,"message":"65","line":15,"column":27,"nodeType":"58","messageId":"59","endLine":15,"endColumn":45},{"ruleId":"56","severity":1,"message":"66","line":16,"column":27,"nodeType":"58","messageId":"59","endLine":16,"endColumn":45},{"ruleId":"56","severity":1,"message":"67","line":17,"column":26,"nodeType":"58","messageId":"59","endLine":17,"endColumn":43},{"ruleId":"56","severity":1,"message":"68","line":18,"column":19,"nodeType":"58","messageId":"59","endLine":18,"endColumn":29},{"ruleId":"56","severity":1,"message":"69","line":21,"column":21,"nodeType":"58","messageId":"59","endLine":21,"endColumn":33},{"ruleId":"70","severity":2,"message":"71","line":44,"column":30,"nodeType":"58","messageId":"72","endLine":44,"endColumn":40},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'theme' is assigned a value but never used.","Identifier","unusedVar",["73"],["74"],"'useMutation' is defined but never used.","'ADD_PROFILE' is defined but never used.","'navigate' is assigned a value but never used.","'setUsernameErrText' is assigned a value but never used.","'setPasswordErrText' is assigned a value but never used.","'setConfirmErrText' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setFormState' is assigned a value but never used.","no-undef","'addProfile' is not defined.","undef","no-global-assign","no-unsafe-negation"]