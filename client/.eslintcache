[{"C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\index.js":"1","C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\App.js":"2","C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\utils\\queries.js":"3","C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\utils\\mutations.js":"4","C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\utils\\auth.js":"5","C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\pages\\Login.jsx":"6","C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\pages\\Signup.jsx":"7","C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\components\\layout\\AuthLayout.jsx":"8"},{"size":232,"mtime":1666090616579,"results":"9","hashOfConfig":"10"},{"size":1963,"mtime":1666090616570,"results":"11","hashOfConfig":"10"},{"size":424,"mtime":1664587245313,"results":"12","hashOfConfig":"10"},{"size":880,"mtime":1666094000944,"results":"13","hashOfConfig":"10"},{"size":757,"mtime":1666090616612,"results":"14","hashOfConfig":"10"},{"size":2594,"mtime":1666090616607,"results":"15","hashOfConfig":"10"},{"size":4813,"mtime":1666090616610,"results":"16","hashOfConfig":"10"},{"size":727,"mtime":1666093494682,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"t63t2q",{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":1,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\index.js",[],"C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\App.js",["37"],"import React from 'react';\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { blue } from \"@mui/material/colors\"\r\n\r\nimport Signup from './pages/Signup';\r\nimport Login from './pages/Login';\r\nimport AuthLayout from './components/layout/AuthLayout';\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem('id_token');\r\n  // return the headers to the context so httpLink can read them\r\n\r\n  const theme = createTheme({\r\n    palette: { primary: blue }\r\n  });\r\n\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n\r\n  const theme = createTheme({\r\n    palette: { primary: blue }\r\n  });\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline/>\r\n        <Router>\r\n          <Routes>\r\n            <Route path=\"/\" element={<AuthLayout />}>\r\n              <Route path=\"login\" element={<Login />} />\r\n              <Route path=\"signup\" element={<Signup />} />\r\n            </Route>\r\n          </Routes>\r\n          {/* <Routes>\r\n            <Route path=\"/\" element={<AppLayout />}>\r\n              <Route index element={<Home />} />\r\n              <Route path=\"memo\" element={<Home />} />\r\n            </Route>\r\n          </Routes> */}\r\n        </Router>\r\n      </ThemeProvider>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\utils\\queries.js",[],["38","39"],"C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\utils\\auth.js",[],"C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\pages\\Login.jsx",[],"C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\pages\\Signup.jsx",["40","41","42","43","44","45","46","47","48"],"import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { Box, TextField, Button } from \"@mui/material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_PROFILE } from '../utils/mutations';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\n\r\nconst Signup = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const [usernameErrText, setUsernameErrText] = useState(\"\");\r\n  const [passwordErrText, setPasswordErrText] = useState(\"\");\r\n  const [confirmErrText, setConfirmErrText] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n  \r\n  const [formState, setFormState] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n  // const [addProfile, { error, data }] = useMutation(ADD_PROFILE);\r\n\r\n  // update state based on form input changes\r\n  // const handleChange = (event) => {\r\n  //   const { name, value } = event.target;\r\n\r\n  //   setFormState({\r\n  //     ...formState,\r\n  //     [name]: value,\r\n  //   });\r\n  // };\r\n\r\n  // submit form\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(formState);\r\n\r\n    try {\r\n      const { data } = await addProfile({\r\n        variables: { ...formState },\r\n      });\r\n\r\n      Auth.login(data.addProfile.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <Box component=\"form\" onSubmit={handleSubmit} noValidate>\r\n      <TextField \r\n        fullWidth \r\n        id=\"username\" \r\n        label=\"user name\" \r\n        margin=\"normal\"\r\n        name=\"username\"\r\n        required\r\n        helperText={usernameErrText}\r\n        error={usernameErrText !== \"\"}\r\n        disabled={loading}\r\n      />\r\n      <TextField \r\n        fullWidth \r\n        id=\"password\" \r\n        label=\"password\" \r\n        margin=\"normal\"\r\n        name=\"password\"\r\n        type=\"password\"\r\n        required\r\n        helperText={passwordErrText}\r\n        error={passwordErrText !== \"\"}\r\n        disabled={loading}\r\n      />\r\n      <TextField \r\n        fullWidth \r\n        id=\"confirmPassword\" \r\n        label=\"confirm password\" \r\n        margin=\"normal\"\r\n        name=\"confirmPassword\"\r\n        type=\"password\"\r\n        required\r\n        helperText={confirmErrText}\r\n        error={confirmErrText !== \"\"}\r\n        disabled={loading}\r\n      />\r\n      <LoadingButton \r\n        sx={{ mt: 3, mb: 2}} \r\n        fullWidth \r\n        type=\"submit\"\r\n        loading={loading}\r\n        color=\"primary\"\r\n        variant=\"outlined\"\r\n      >\r\n        Create Account\r\n      </LoadingButton>    \r\n    </Box>\r\n      <Button component={Link} to=\"/login\">\r\n        Do you already have an account? Log in\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n\r\n\r\n\r\n// const Register = () => {\r\n\r\n \r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setUsernameErrText(\"\");\r\n//     setPasswordErrText(\"\");\r\n//     setConfirmErrText(\"\");\r\n\r\n//     // get data from the front-end\r\n//     const data = new FormData(e.target);\r\n//     const username = data.get(\"username\").trim();\r\n//     const password = data.get(\"password\").trim();\r\n//     const confirmPassword = data.get(\"confirmPassword\").trim();\r\n//     console.log(username);\r\n//     console.log(password);\r\n//     console.log(confirmPassword);\r\n\r\n//     let error = false;\r\n\r\n//     if (username === \"\") {\r\n//       error = true;\r\n//       setUsernameErrText(\"Enter your username.\");\r\n//     }\r\n//     if (password === \"\") {\r\n//       error = true;\r\n//       setPasswordErrText(\"Enter your password.\");\r\n//     }\r\n//     if (confirmPassword === \"\") {\r\n//       error = true;\r\n//       setConfirmErrText(\"Enter your confirmed password.\");\r\n//     }\r\n//     if (password !== confirmPassword) {\r\n//       error = true;\r\n//       setConfirmErrText(\"Password and confirmed password don't match.\");\r\n//     }\r\n    \r\n//     if (error) return;\r\n\r\n//     setLoading(true);\r\n\r\n//     // register api\r\n//     try {\r\n//       const res = await authApi.register({\r\n//         username,\r\n//         password,\r\n//         confirmPassword\r\n//       });\r\n//       setLoading(false);\r\n//       localStorage.setItem(\"token\", res.token);\r\n//       console.log(\"register successful\");\r\n//       navigate(\"/\");\r\n//     } catch (err) {\r\n//       const errors = err.data.errors;\r\n//       console.log(errors);\r\n//       errors.forEach((err) => {\r\n//         if (err.param === \"username\") {\r\n//           setUsernameErrText(err.msg);\r\n//         }\r\n//         if (err.param === \"password\") {\r\n//           setPasswordErrText(err.msg);\r\n//         }\r\n//         if (err.param === \"confirmPassword\") {\r\n//           setConfirmErrText(err.msg);\r\n//         }\r\n//       });\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n \r\n// };\r\n\r\n// export default Register","C:\\Users\\Owner\\Desktop\\UWA\\Project-3\\client\\src\\components\\layout\\AuthLayout.jsx",[],{"ruleId":"49","severity":1,"message":"50","line":27,"column":9,"nodeType":"51","messageId":"52","endLine":27,"endColumn":14},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"49","severity":1,"message":"57","line":6,"column":10,"nodeType":"51","messageId":"52","endLine":6,"endColumn":21},{"ruleId":"49","severity":1,"message":"58","line":7,"column":10,"nodeType":"51","messageId":"52","endLine":7,"endColumn":21},{"ruleId":"49","severity":1,"message":"59","line":14,"column":9,"nodeType":"51","messageId":"52","endLine":14,"endColumn":17},{"ruleId":"49","severity":1,"message":"60","line":15,"column":27,"nodeType":"51","messageId":"52","endLine":15,"endColumn":45},{"ruleId":"49","severity":1,"message":"61","line":16,"column":27,"nodeType":"51","messageId":"52","endLine":16,"endColumn":45},{"ruleId":"49","severity":1,"message":"62","line":17,"column":26,"nodeType":"51","messageId":"52","endLine":17,"endColumn":43},{"ruleId":"49","severity":1,"message":"63","line":18,"column":19,"nodeType":"51","messageId":"52","endLine":18,"endColumn":29},{"ruleId":"49","severity":1,"message":"64","line":21,"column":21,"nodeType":"51","messageId":"52","endLine":21,"endColumn":33},{"ruleId":"65","severity":2,"message":"66","line":44,"column":30,"nodeType":"51","messageId":"67","endLine":44,"endColumn":40},"no-unused-vars","'theme' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["68"],"no-negated-in-lhs",["69"],"'useMutation' is defined but never used.","'ADD_PROFILE' is defined but never used.","'navigate' is assigned a value but never used.","'setUsernameErrText' is assigned a value but never used.","'setPasswordErrText' is assigned a value but never used.","'setConfirmErrText' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setFormState' is assigned a value but never used.","no-undef","'addProfile' is not defined.","undef","no-global-assign","no-unsafe-negation"]